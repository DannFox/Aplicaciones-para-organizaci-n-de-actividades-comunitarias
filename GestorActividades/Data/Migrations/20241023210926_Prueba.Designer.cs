// <auto-generated />
using System;
using GestorActividades.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorActividades.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241023210926_Prueba")]
    partial class Prueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActividadParticipante", b =>
                {
                    b.Property<int>("ActividadesActividadID")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantesParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("ActividadesActividadID", "ParticipantesParticipanteId");

                    b.HasIndex("ParticipantesParticipanteId");

                    b.ToTable("ActividadParticipante");
                });

            modelBuilder.Entity("GestorActividades.Models.Actividad", b =>
                {
                    b.Property<int>("ActividadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActividadID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizadorID")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActividadID");

                    b.HasIndex("OrganizadorID");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("GestorActividades.Models.Organizador", b =>
                {
                    b.Property<int>("OrganizadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizadorID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizadorID");

                    b.ToTable("Organizadores");
                });

            modelBuilder.Entity("GestorActividades.Models.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipanteId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipanteId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("ActividadParticipante", b =>
                {
                    b.HasOne("GestorActividades.Models.Actividad", null)
                        .WithMany()
                        .HasForeignKey("ActividadesActividadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorActividades.Models.Participante", null)
                        .WithMany()
                        .HasForeignKey("ParticipantesParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorActividades.Models.Actividad", b =>
                {
                    b.HasOne("GestorActividades.Models.Organizador", "Organizador")
                        .WithMany("Actividades")
                        .HasForeignKey("OrganizadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("GestorActividades.Models.Organizador", b =>
                {
                    b.Navigation("Actividades");
                });
#pragma warning restore 612, 618
        }
    }
}
